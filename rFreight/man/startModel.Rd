% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/startModel.R
\name{startModel}
\alias{startModel}
\title{Start the freight model}
\usage{
startModel(basedir = getwd(), scenarioname = "base",
  scenvarfile = "scenario_variables.R", inputdir = "inputs",
  outputdir = "outputs", scriptsdir = "scripts", packages = NULL,
  steps = NULL, steptitles = NULL, stepscripts = NULL)
}
\arguments{
\item{basedir}{Path to the root directory of the model (character string); defaults to the current working directory returned by getwd()}

\item{scenarioname}{Name of the scenario, which should be identical to the directory name in the file system (character string); defaults to "base"}

\item{scenvarfile}{Name of the file containing scenario variables, defaults to "scenario_variables.R"}

\item{inputdir}{Name of the directory containing inputs within the scenario folder, defaults to "inputs"}

\item{outputdir}{Name of the directory containing outputs within the scenario folder, defaults to "outputs"}

\item{scriptsdir}{Name of the directory in the model containing model scripts, defaults to "scripts"}

\item{packages}{Character vector of package names, for packages used in the course of running the model}

\item{steps}{Character vector of model component names in the order that they need to be run}

\item{steptitles}{Character vector of model component titles for use in progress bars, print statements, in the order that they need to be run}

\item{stepscripts}{Character vector of model component script filenames so that the components can be called, in the order that they need to be run}
}
\description{
Creates a model object to contain model and scenario structure and variable information.
Creates an outputs folder if required (i.e. the scenario has not been run).
Reads in the scenario variables. Loads packages required by the model.
Creates the lists objects for each of the model components ready for use during the model run.
}
\keyword{Management}

